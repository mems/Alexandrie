#!/usr/bin/env sh

# Only staged files
files=$(git diff --cached --name-only --diff-filter=ACM | grep "^data/AX[0-9A-F]\+\.md$")

if [ "$files" = "" ]; then
	exit 0
fi

mode=100644
for file in ${files}; do
	echo "lint $file"
	
	# Lint staged file:
	# 
	# 1. get staged file
	# 2. lint it
	# 3. put blob in git object db and compute it hash ID
	# 4. update the git index (staging)
	# 
	# Based on:
	# https://gist.github.com/ihower/6132576
	# http://eddmann.com/posts/the-internals-of-git/
	hash=$(git cat-file blob ":$file" | ./axlint | git hash-object -w --stdin)
	git update-index --add --cacheinfo $mode $hash "$file"
	
	# Lint unstaged file
	# To prevent inverse commits, we need to lint already staged parts and incidentally unstaged parts
	# To prevent shell clobber, need to use a tmp file. Alt: create file in /tmp http://unix.stackexchange.com/a/181938/60668
	# Any editor with this file opened should be aware of that
	./axlint < "$file" > "$file.tmp" && mv "$file.tmp" "$file"
done